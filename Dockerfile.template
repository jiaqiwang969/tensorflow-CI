FROM ubuntu:18.04

MAINTAINER Haowen Xu <haowen.xu@outlook.com>

ARG UBUNTU_MIRROR=archive.ubuntu.com
ENV LANG=en_US.UTF-8
ENV LC_ALL=en_US.UTF-8
ENV PATH="${PATH}"
ENV SHELL=/bin/bash
{% if gpu %}ENV LD_LIBRARY_PATH="/usr/local/nvidia/lib64:/usr/local/nvidia/lib:/usr/local/cuda/lib64:/usr/local/cuda/lib:${LD_LIBRARY_PATH}"{% endif %}

RUN sed -i "s/archive.ubuntu.com/${UBUNTU_MIRROR}/g" /etc/apt/sources.list && \
    DEBIAN_FRONTEND=noninteractive apt-get update && \
    DEBIAN_FRONTEND=noninteractive apt-get -y dist-upgrade && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends apt-utils && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
        build-essential \
        ca-certificates \
        wget \
        git \
        locales \
        language-pack-en \
        {% if python_version[0] == '2' %}python python-dev python-pip{% else %}python3 python3-dev python3-pip{% endif %} \
    && \{% if python_version[0] == '3' %}
    ln -sf /usr/bin/python3 /usr/bin/python && \
    ln -sf /usr/bin/pip3 /usr/bin/pip && \{% endif %}
    apt-get clean && \
    rm -rf /var/lib/apt/lists/* && \
    python -m pip install --upgrade pip setuptools && \
    python -m pip install --upgrade numpy coverage mock pytest sphinx matplotlib pillow "coveralls>=1.1" && \
    python -m pip install {% if python_version[0] == '2' %}"ipython[all]<6"{% else %}--upgrade "ipython[all]"{% endif %} && \
    python -m pip install tensorflow=={{ tensorflow_version }}

CMD ["/bin/bash"]
